{"version":3,"file":"routes.js","sources":["routes.js","home/custom-scrollbar.js","home/splash.js","home.js"],"names":[],"mappings":"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","sourcesContent":["\n/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2014 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n * \n * \n */\n\n//@see http://forge.taotesting.com/projects/tao/wiki/Front_js\ndefine('taoCe/controller/routes',[],function(){\n    'use strict';\n\n    return {\n        'Home' : {\n            'css' : 'home.css'\n        },\n        'Main':{\n            'actions': {\n                'index' : 'controller/home'\n            }\n        }\n    };\n});\n","(function ($) {\n\n  $.fn.customScrollbar = function (options, args) {\n\n    var defaultOptions = {\n      skin: undefined,\n      hScroll: true,\n      vScroll: true,\n      updateOnWindowResize: false,\n      animationSpeed: 300,\n      onCustomScroll: undefined,\n      swipeSpeed: 1,\n      wheelSpeed: 40,\n      fixedThumbWidth: undefined,\n      fixedThumbHeight: undefined,\n      preventDefaultScroll: false\n    }\n\n    var Scrollable = function (element, options) {\n      this.$element = $(element);\n      this.options = options;\n      this.addScrollableClass();\n      this.addSkinClass();\n      this.addScrollBarComponents();\n      if (this.options.vScroll)\n        this.vScrollbar = new Scrollbar(this, new VSizing());\n      if (this.options.hScroll)\n        this.hScrollbar = new Scrollbar(this, new HSizing());\n      this.$element.data(\"scrollable\", this);\n      this.initKeyboardScrolling();\n      this.bindEvents();\n    }\n\n    Scrollable.prototype = {\n\n      addScrollableClass: function () {\n        if (!this.$element.hasClass(\"scrollable\")) {\n          this.scrollableAdded = true;\n          this.$element.addClass(\"scrollable\");\n        }\n      },\n\n      removeScrollableClass: function () {\n        if (this.scrollableAdded)\n          this.$element.removeClass(\"scrollable\");\n      },\n\n      addSkinClass: function () {\n        if (typeof(this.options.skin) == \"string\" && !this.$element.hasClass(this.options.skin)) {\n          this.skinClassAdded = true;\n          this.$element.addClass(this.options.skin);\n        }\n      },\n\n      removeSkinClass: function () {\n        if (this.skinClassAdded)\n          this.$element.removeClass(this.options.skin);\n      },\n\n      addScrollBarComponents: function () {\n        this.assignViewPort();\n        if (this.$viewPort.length == 0) {\n          this.$element.wrapInner(\"<div class=\\\"viewport\\\" />\");\n          this.assignViewPort();\n          this.viewPortAdded = true;\n        }\n        this.assignOverview();\n        if (this.$overview.length == 0) {\n          this.$viewPort.wrapInner(\"<div class=\\\"overview\\\" />\");\n          this.assignOverview();\n          this.overviewAdded = true;\n        }\n        this.addScrollBar(\"vertical\", \"prepend\");\n        this.addScrollBar(\"horizontal\", \"append\");\n      },\n\n      removeScrollbarComponents: function () {\n        this.removeScrollbar(\"vertical\");\n        this.removeScrollbar(\"horizontal\");\n        if (this.overviewAdded)\n          this.$element.unwrap();\n        if (this.viewPortAdded)\n          this.$element.unwrap();\n      },\n\n      removeScrollbar: function (orientation) {\n        if (this[orientation + \"ScrollbarAdded\"])\n          this.$element.find(\".scroll-bar.\" + orientation).remove();\n      },\n\n      assignViewPort: function () {\n        this.$viewPort = this.$element.find(\".viewport\");\n      },\n\n      assignOverview: function () {\n        this.$overview = this.$viewPort.find(\".overview\");\n      },\n\n      addScrollBar: function (orientation, fun) {\n        if (this.$element.find(\".scroll-bar.\" + orientation).length == 0) {\n          this.$element[fun](\"<div class='scroll-bar \" + orientation + \"'><div class='thumb'></div></div>\")\n          this[orientation + \"ScrollbarAdded\"] = true;\n        }\n      },\n\n      resize: function (keepPosition) {\n        if (this.vScrollbar)\n          this.vScrollbar.resize(keepPosition);\n        if (this.hScrollbar)\n          this.hScrollbar.resize(keepPosition);\n      },\n\n      scrollTo: function (element) {\n        if (this.vScrollbar)\n          this.vScrollbar.scrollToElement(element);\n        if (this.hScrollbar)\n          this.hScrollbar.scrollToElement(element);\n      },\n\n      scrollToXY: function (x, y) {\n        this.scrollToX(x);\n        this.scrollToY(y);\n      },\n\n      scrollToX: function (x) {\n        if (this.hScrollbar)\n          this.hScrollbar.scrollOverviewTo(x, true);\n      },\n\n      scrollToY: function (y) {\n        if (this.vScrollbar)\n          this.vScrollbar.scrollOverviewTo(y, true);\n      },\n\n      scrollByX: function (x) {\n        if (this.hScrollbar)\n          this.scrollToX(this.hScrollbar.overviewPosition() + x);\n      },\n\n      scrollByY: function (y) {\n        if (this.vScrollbar)\n          this.scrollToY(this.vScrollbar.overviewPosition() + y);\n      },\n\n      remove: function () {\n        this.removeScrollableClass();\n        this.removeSkinClass();\n        this.removeScrollbarComponents();\n        this.$element.data(\"scrollable\", null);\n        this.removeKeyboardScrolling();\n        if (this.vScrollbar)\n          this.vScrollbar.remove();\n        if (this.hScrollbar)\n          this.hScrollbar.remove();\n      },\n\n      setAnimationSpeed: function (speed) {\n        this.options.animationSpeed = speed;\n      },\n\n      isInside: function (element, wrappingElement) {\n        var $element = $(element);\n        var $wrappingElement = $(wrappingElement);\n        var elementOffset = $element.offset();\n        var wrappingElementOffset = $wrappingElement.offset();\n        return (elementOffset.top >= wrappingElementOffset.top) && (elementOffset.left >= wrappingElementOffset.left) &&\n          (elementOffset.top + $element.height() <= wrappingElementOffset.top + $wrappingElement.height()) &&\n          (elementOffset.left + $element.width() <= wrappingElementOffset.left + $wrappingElement.width())\n      },\n\n      initKeyboardScrolling: function () {\n        var _this = this;\n\n        this.elementKeydown = function (event) {\n          if (document.activeElement === _this.$element[0]) {\n            if (_this.vScrollbar)\n              _this.vScrollbar.keyScroll(event);\n            if (_this.hScrollbar)\n              _this.hScrollbar.keyScroll(event);\n          }\n        }\n\n        this.$element\n          .attr('tabindex', '-1')\n          .keydown(this.elementKeydown);\n      },\n\n      removeKeyboardScrolling: function () {\n        this.$element\n          .removeAttr('tabindex')\n          .unbind(\"keydown\", this.elementKeydown);\n      },\n\n      bindEvents: function () {\n        if (this.options.onCustomScroll)\n          this.$element.on(\"customScroll\", this.options.onCustomScroll);\n      }\n\n    }\n\n    var Scrollbar = function (scrollable, sizing) {\n      this.scrollable = scrollable;\n      this.sizing = sizing\n      this.$scrollBar = this.sizing.scrollBar(this.scrollable.$element);\n      this.$thumb = this.$scrollBar.find(\".thumb\");\n      this.setScrollPosition(0, 0);\n      this.resize();\n      this.initMouseMoveScrolling();\n      this.initMouseWheelScrolling();\n      this.initTouchScrolling();\n      this.initMouseClickScrolling();\n      this.initWindowResize();\n    }\n\n    Scrollbar.prototype = {\n\n      resize: function (keepPosition) {\n        this.overviewSize = this.sizing.size(this.scrollable.$overview);\n        this.calculateViewPortSize();\n        this.sizing.size(this.scrollable.$viewPort, this.viewPortSize);\n        this.ratio = this.viewPortSize / this.overviewSize;\n        this.sizing.size(this.$scrollBar, this.viewPortSize);\n        this.thumbSize = this.calculateThumbSize();\n        this.sizing.size(this.$thumb, this.thumbSize);\n        this.maxThumbPosition = this.calculateMaxThumbPosition();\n        this.maxOverviewPosition = this.calculateMaxOverviewPosition();\n        this.enabled = (this.overviewSize > this.viewPortSize);\n        if (this.scrollPercent === undefined)\n          this.scrollPercent = 0.0;\n        if (this.enabled)\n          this.rescroll(keepPosition);\n        else\n          this.setScrollPosition(0, 0);\n        this.$scrollBar.toggle(this.enabled);\n      },\n\n      calculateViewPortSize: function () {\n        var elementSize = this.sizing.size(this.scrollable.$element);\n        if (elementSize > 0 && !this.maxSizeUsed) {\n          this.viewPortSize = elementSize;\n          this.maxSizeUsed = false;\n        }\n        else {\n          var maxSize = this.sizing.maxSize(this.scrollable.$element);\n          this.viewPortSize = Math.min(maxSize, this.overviewSize);\n          this.maxSizeUsed = true;\n        }\n      },\n\n      calculateThumbSize: function () {\n        var fixedSize = this.sizing.fixedThumbSize(this.scrollable.options)\n        var size;\n        if (fixedSize)\n          size = fixedSize;\n        else\n          size = this.ratio * this.viewPortSize\n        return Math.max(size, this.sizing.minSize(this.$thumb));\n      },\n\n      initMouseMoveScrolling: function () {\n        var _this = this;\n        this.$thumb.mousedown(function (event) {\n          if (_this.enabled)\n            _this.startMouseMoveScrolling(event);\n        });\n        this.documentMouseup = function (event) {\n          _this.stopMouseMoveScrolling(event);\n        };\n        $(document).mouseup(this.documentMouseup);\n        this.documentMousemove = function (event) {\n          _this.mouseMoveScroll(event);\n        };\n        $(document).mousemove(this.documentMousemove);\n        this.$thumb.click(function (event) {\n          event.stopPropagation();\n        });\n      },\n\n      removeMouseMoveScrolling: function () {\n        this.$thumb.unbind();\n        $(document).unbind(\"mouseup\", this.documentMouseup);\n        $(document).unbind(\"mousemove\", this.documentMousemove);\n      },\n\n      initMouseWheelScrolling: function () {\n        var _this = this;\n        this.scrollable.$element.mousewheel(function (event, delta, deltaX, deltaY) {\n          if (_this.enabled) {\n            var scrolled = _this.mouseWheelScroll(deltaX, deltaY);\n            _this.stopEventConditionally(event, scrolled);\n          }\n        });\n      },\n\n      removeMouseWheelScrolling: function () {\n        this.scrollable.$element.unbind(\"mousewheel\");\n      },\n\n      initTouchScrolling: function () {\n        if (document.addEventListener) {\n          var _this = this;\n          this.elementTouchstart = function (event) {\n            if (_this.enabled)\n              _this.startTouchScrolling(event);\n          }\n          this.scrollable.$element[0].addEventListener(\"touchstart\", this.elementTouchstart);\n          this.documentTouchmove = function (event) {\n            _this.touchScroll(event);\n          }\n          document.addEventListener(\"touchmove\", this.documentTouchmove);\n          this.elementTouchend = function (event) {\n            _this.stopTouchScrolling(event);\n          }\n          this.scrollable.$element[0].addEventListener(\"touchend\", this.elementTouchend);\n        }\n      },\n\n      removeTouchScrolling: function () {\n        if (document.addEventListener) {\n          this.scrollable.$element[0].removeEventListener(\"touchstart\", this.elementTouchstart);\n          document.removeEventListener(\"touchmove\", this.documentTouchmove);\n          this.scrollable.$element[0].removeEventListener(\"touchend\", this.elementTouchend);\n        }\n      },\n\n      initMouseClickScrolling: function () {\n        var _this = this;\n        this.scrollBarClick = function (event) {\n          _this.mouseClickScroll(event);\n        };\n        this.$scrollBar.click(this.scrollBarClick);\n      },\n\n      removeMouseClickScrolling: function () {\n        this.$scrollBar.unbind(\"click\", this.scrollBarClick);\n      },\n\n      initWindowResize: function () {\n        if (this.scrollable.options.updateOnWindowResize) {\n          var _this = this;\n          this.windowResize = function () {\n            _this.resize();\n          };\n          $(window).resize(this.windowResize);\n        }\n      },\n\n      removeWindowResize: function () {\n        $(window).unbind(\"resize\", this.windowResize);\n      },\n\n      isKeyScrolling: function (key) {\n        return this.keyScrollDelta(key) != null;\n      },\n\n      keyScrollDelta: function (key) {\n        for (var scrollingKey in this.sizing.scrollingKeys)\n          if (scrollingKey == key)\n            return this.sizing.scrollingKeys[key](this.viewPortSize);\n        return null;\n      },\n\n      startMouseMoveScrolling: function (event) {\n        this.mouseMoveScrolling = true;\n        $(\"html\").addClass(\"not-selectable\");\n        this.setUnselectable($(\"html\"), \"on\");\n        this.setScrollEvent(event);\n      },\n\n      stopMouseMoveScrolling: function (event) {\n        this.mouseMoveScrolling = false;\n        $(\"html\").removeClass(\"not-selectable\");\n        this.setUnselectable($(\"html\"), null);\n      },\n\n      setUnselectable: function (element, value) {\n        if (element.attr(\"unselectable\") != value) {\n          element.attr(\"unselectable\", value);\n          element.find(':not(input)').attr('unselectable', value);\n        }\n      },\n\n      mouseMoveScroll: function (event) {\n        if (this.mouseMoveScrolling) {\n          var delta = this.sizing.mouseDelta(this.scrollEvent, event);\n          this.scrollThumbBy(delta);\n          this.setScrollEvent(event);\n        }\n      },\n\n      startTouchScrolling: function (event) {\n        if (event.touches && event.touches.length == 1) {\n          this.setScrollEvent(event.touches[0]);\n          this.touchScrolling = true;\n          event.stopPropagation();\n        }\n      },\n\n      touchScroll: function (event) {\n        if (this.touchScrolling && event.touches && event.touches.length == 1) {\n          var delta = -this.sizing.mouseDelta(this.scrollEvent, event.touches[0]) * this.scrollable.options.swipeSpeed;\n          var scrolled = this.scrollOverviewBy(delta);\n          if (scrolled)\n            this.setScrollEvent(event.touches[0]);\n          this.stopEventConditionally(event, scrolled);\n        }\n      },\n\n      stopTouchScrolling: function (event) {\n        this.touchScrolling = false;\n        event.stopPropagation();\n      },\n\n      mouseWheelScroll: function (deltaX, deltaY) {\n        var delta = -this.sizing.wheelDelta(deltaX, deltaY) * this.scrollable.options.wheelSpeed;\n        if (delta != 0)\n          return this.scrollOverviewBy(delta);\n      },\n\n      mouseClickScroll: function (event) {\n        var delta = this.viewPortSize - 20;\n        if (event[\"page\" + this.sizing.scrollAxis()] < this.$thumb.offset()[this.sizing.offsetComponent()])\n        // mouse click over thumb\n          delta = -delta;\n        this.scrollOverviewBy(delta);\n      },\n\n      keyScroll: function (event) {\n        var keyDown = event.which;\n        if (this.enabled && this.isKeyScrolling(keyDown)) {\n          var scrolled = this.scrollOverviewBy(this.keyScrollDelta(keyDown));\n          this.stopEventConditionally(event, scrolled);\n        }\n      },\n\n      scrollThumbBy: function (delta) {\n        var thumbPosition = this.thumbPosition();\n        thumbPosition += delta;\n        thumbPosition = this.positionOrMax(thumbPosition, this.maxThumbPosition);\n        var oldScrollPercent = this.scrollPercent;\n        this.scrollPercent = thumbPosition / this.maxThumbPosition;\n        if (oldScrollPercent != this.scrollPercent) {\n          var overviewPosition = (thumbPosition * this.maxOverviewPosition) / this.maxThumbPosition;\n          this.setScrollPosition(overviewPosition, thumbPosition);\n          this.triggerCustomScroll(oldScrollPercent);\n          return true\n        }\n        else\n          return false;\n      },\n\n      thumbPosition: function () {\n        return this.$thumb.position()[this.sizing.offsetComponent()];\n      },\n\n      scrollOverviewBy: function (delta) {\n        var overviewPosition = this.overviewPosition() + delta;\n        return this.scrollOverviewTo(overviewPosition, false);\n      },\n\n      overviewPosition: function () {\n        return -this.scrollable.$overview.position()[this.sizing.offsetComponent()];\n      },\n\n      scrollOverviewTo: function (overviewPosition, animate) {\n        overviewPosition = this.positionOrMax(overviewPosition, this.maxOverviewPosition);\n        var oldScrollPercent = this.scrollPercent;\n        this.scrollPercent = overviewPosition / this.maxOverviewPosition;\n        if (oldScrollPercent != this.scrollPercent) {\n          var thumbPosition = this.scrollPercent * this.maxThumbPosition;\n          if (animate)\n            this.setScrollPositionWithAnimation(overviewPosition, thumbPosition);\n          else\n            this.setScrollPosition(overviewPosition, thumbPosition);\n          this.triggerCustomScroll(oldScrollPercent);\n          return true;\n        }\n        else\n          return false;\n      },\n\n      positionOrMax: function (p, max) {\n        if (p < 0)\n          return 0;\n        else if (p > max)\n          return max;\n        else\n          return p;\n      },\n\n      triggerCustomScroll: function (oldScrollPercent) {\n        this.scrollable.$element.trigger(\"customScroll\", {\n            scrollAxis: this.sizing.scrollAxis(),\n            direction: this.sizing.scrollDirection(oldScrollPercent, this.scrollPercent),\n            scrollPercent: this.scrollPercent * 100\n          }\n        );\n      },\n\n      rescroll: function (keepPosition) {\n        if (keepPosition) {\n          var overviewPosition = this.positionOrMax(this.overviewPosition(), this.maxOverviewPosition);\n          this.scrollPercent = overviewPosition / this.maxOverviewPosition;\n          var thumbPosition = this.scrollPercent * this.maxThumbPosition;\n          this.setScrollPosition(overviewPosition, thumbPosition);\n        }\n        else {\n          var thumbPosition = this.scrollPercent * this.maxThumbPosition;\n          var overviewPosition = this.scrollPercent * this.maxOverviewPosition;\n          this.setScrollPosition(overviewPosition, thumbPosition);\n        }\n      },\n\n      setScrollPosition: function (overviewPosition, thumbPosition) {\n        this.$thumb.css(this.sizing.offsetComponent(), thumbPosition + \"px\");\n        this.scrollable.$overview.css(this.sizing.offsetComponent(), -overviewPosition + \"px\");\n      },\n\n      setScrollPositionWithAnimation: function (overviewPosition, thumbPosition) {\n        var thumbAnimationOpts = {};\n        var overviewAnimationOpts = {};\n        thumbAnimationOpts[this.sizing.offsetComponent()] = thumbPosition + \"px\";\n        this.$thumb.animate(thumbAnimationOpts, this.scrollable.options.animationSpeed);\n        overviewAnimationOpts[this.sizing.offsetComponent()] = -overviewPosition + \"px\";\n        this.scrollable.$overview.animate(overviewAnimationOpts, this.scrollable.options.animationSpeed);\n      },\n\n      calculateMaxThumbPosition: function () {\n        return Math.max(0, this.sizing.size(this.$scrollBar) - this.thumbSize);\n      },\n\n      calculateMaxOverviewPosition: function () {\n        return Math.max(0, this.sizing.size(this.scrollable.$overview) - this.sizing.size(this.scrollable.$viewPort));\n      },\n\n      setScrollEvent: function (event) {\n        var attr = \"page\" + this.sizing.scrollAxis();\n        if (!this.scrollEvent || this.scrollEvent[attr] != event[attr])\n          this.scrollEvent = {pageX: event.pageX, pageY: event.pageY};\n      },\n\n      scrollToElement: function (element) {\n        var $element = $(element);\n        if (this.sizing.isInside($element, this.scrollable.$overview) && !this.sizing.isInside($element, this.scrollable.$viewPort)) {\n          var elementOffset = $element.offset();\n          var overviewOffset = this.scrollable.$overview.offset();\n          var viewPortOffset = this.scrollable.$viewPort.offset();\n          this.scrollOverviewTo(elementOffset[this.sizing.offsetComponent()] - overviewOffset[this.sizing.offsetComponent()], true);\n        }\n      },\n\n      remove: function () {\n        this.removeMouseMoveScrolling();\n        this.removeMouseWheelScrolling();\n        this.removeTouchScrolling();\n        this.removeMouseClickScrolling();\n        this.removeWindowResize();\n      },\n\n      stopEventConditionally: function (event, condition) {\n        if (condition || this.scrollable.options.preventDefaultScroll) {\n          event.preventDefault();\n          event.stopPropagation();\n        }\n      }\n\n    }\n\n    var HSizing = function () {\n    }\n\n    HSizing.prototype = {\n      size: function ($el, arg) {\n        if (arg)\n          return $el.width(arg);\n        else\n          return $el.width();\n      },\n\n      minSize: function ($el) {\n        return parseInt($el.css(\"min-width\")) || 0;\n      },\n\n      maxSize: function ($el) {\n        return parseInt($el.css(\"max-width\")) || 0;\n      },\n\n      fixedThumbSize: function (options) {\n        return options.fixedThumbWidth;\n      },\n\n      scrollBar: function ($el) {\n        return $el.find(\".scroll-bar.horizontal\");\n      },\n\n      mouseDelta: function (event1, event2) {\n        return event2.pageX - event1.pageX;\n      },\n\n      offsetComponent: function () {\n        return \"left\";\n      },\n\n      wheelDelta: function (deltaX, deltaY) {\n        return deltaX;\n      },\n\n      scrollAxis: function () {\n        return \"X\";\n      },\n\n      scrollDirection: function (oldPercent, newPercent) {\n        return oldPercent < newPercent ? \"right\" : \"left\";\n      },\n\n      scrollingKeys: {\n        37: function (viewPortSize) {\n          return -10; //arrow left\n        },\n        39: function (viewPortSize) {\n          return 10; //arrow right\n        }\n      },\n\n      isInside: function (element, wrappingElement) {\n        var $element = $(element);\n        var $wrappingElement = $(wrappingElement);\n        var elementOffset = $element.offset();\n        var wrappingElementOffset = $wrappingElement.offset();\n        return (elementOffset.left >= wrappingElementOffset.left) &&\n          (elementOffset.left + $element.width() <= wrappingElementOffset.left + $wrappingElement.width());\n      }\n\n    }\n\n    var VSizing = function () {\n    }\n\n    VSizing.prototype = {\n\n      size: function ($el, arg) {\n        if (arg)\n          return $el.height(arg);\n        else\n          return $el.height();\n      },\n\n      minSize: function ($el) {\n        return parseInt($el.css(\"min-height\")) || 0;\n      },\n\n      maxSize: function ($el) {\n        return parseInt($el.css(\"max-height\")) || 0;\n      },\n\n      fixedThumbSize: function (options) {\n        return options.fixedThumbHeight;\n      },\n\n      scrollBar: function ($el) {\n        return $el.find(\".scroll-bar.vertical\");\n      },\n\n      mouseDelta: function (event1, event2) {\n        return event2.pageY - event1.pageY;\n      },\n\n      offsetComponent: function () {\n        return \"top\";\n      },\n\n      wheelDelta: function (deltaX, deltaY) {\n        return deltaY;\n      },\n\n      scrollAxis: function () {\n        return \"Y\";\n      },\n\n      scrollDirection: function (oldPercent, newPercent) {\n        return oldPercent < newPercent ? \"down\" : \"up\";\n      },\n\n      scrollingKeys: {\n        38: function (viewPortSize) {\n          return -10; //arrow up\n        },\n        40: function (viewPortSize) {\n          return 10; //arrow down\n        },\n        33: function (viewPortSize) {\n          return -(viewPortSize - 20); //page up\n        },\n        34: function (viewPortSize) {\n          return viewPortSize - 20; //page down\n        }\n      },\n\n      isInside: function (element, wrappingElement) {\n        var $element = $(element);\n        var $wrappingElement = $(wrappingElement);\n        var elementOffset = $element.offset();\n        var wrappingElementOffset = $wrappingElement.offset();\n        return (elementOffset.top >= wrappingElementOffset.top) &&\n          (elementOffset.top + $element.height() <= wrappingElementOffset.top + $wrappingElement.height());\n      }\n\n    }\n\n    return this.each(function () {\n      if (options == undefined)\n        options = defaultOptions;\n      if (typeof(options) == \"string\") {\n        var scrollable = $(this).data(\"scrollable\");\n        if (scrollable)\n          scrollable[options](args);\n      }\n      else if (typeof(options) == \"object\") {\n        options = $.extend(defaultOptions, options);\n        new Scrollable($(this), options);\n      }\n      else\n        throw \"Invalid type of options\";\n    });\n\n  }\n  ;\n\n})\n  (jQuery);\n\n(function ($) {\n\n  var types = ['DOMMouseScroll', 'mousewheel'];\n\n  if ($.event.fixHooks) {\n    for (var i = types.length; i;) {\n      $.event.fixHooks[ types[--i] ] = $.event.mouseHooks;\n    }\n  }\n\n  $.event.special.mousewheel = {\n    setup: function () {\n      if (this.addEventListener) {\n        for (var i = types.length; i;) {\n          this.addEventListener(types[--i], handler, false);\n        }\n      } else {\n        this.onmousewheel = handler;\n      }\n    },\n\n    teardown: function () {\n      if (this.removeEventListener) {\n        for (var i = types.length; i;) {\n          this.removeEventListener(types[--i], handler, false);\n        }\n      } else {\n        this.onmousewheel = null;\n      }\n    }\n  };\n\n  $.fn.extend({\n    mousewheel: function (fn) {\n      return fn ? this.bind(\"mousewheel\", fn) : this.trigger(\"mousewheel\");\n    },\n\n    unmousewheel: function (fn) {\n      return this.unbind(\"mousewheel\", fn);\n    }\n  });\n\n\n  function handler(event) {\n    var orgEvent = event || window.event, args = [].slice.call(arguments, 1), delta = 0, returnValue = true, deltaX = 0, deltaY = 0;\n    event = $.event.fix(orgEvent);\n    event.type = \"mousewheel\";\n\n    // Old school scrollwheel delta\n    if (orgEvent.wheelDelta) {\n      delta = orgEvent.wheelDelta / 120;\n    }\n    if (orgEvent.detail) {\n      delta = -orgEvent.detail / 3;\n    }\n\n    // New school multidimensional scroll (touchpads) deltas\n    deltaY = delta;\n\n    // Gecko\n    if (orgEvent.axis !== undefined && orgEvent.axis === orgEvent.HORIZONTAL_AXIS) {\n      deltaY = 0;\n      deltaX = delta;\n    }\n\n    // Webkit\n    if (orgEvent.wheelDeltaY !== undefined) {\n      deltaY = orgEvent.wheelDeltaY / 120;\n    }\n    if (orgEvent.wheelDeltaX !== undefined) {\n      deltaX = orgEvent.wheelDeltaX / 120;\n    }\n\n    // Add event and delta to the front of the arguments\n    args.unshift(event, delta, deltaX, deltaY);\n\n    return ($.event.dispatch || $.event.handle).apply(this, args);\n  }\n\n})(jQuery);\n\ndefine(\"taoCe/controller/home/custom-scrollbar\", function(){});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2014 (original work) Open Assessment Technologies SA;\n *\n *\n */\ndefine('taoCe/controller/home/splash',['jquery', 'helpers', 'taoCe/controller/home/custom-scrollbar'], function ($, helpers) {\n    'use strict';\n\n\n    /**\n     * The SplashScreen creates a modal popup that contains a  dynamic diagram of the TAO's workflow.\n     * It relies on content that should be there on a .splash-screen-wrapper element. (This content is loaded from the\n     * server by {@link module:taoCe/controller/home}\n     *\n     * @exports taoCe/controller/home/splash\n     */\n    var SplashScreen = {\n\n        /**\n         * Initialize the splash screen\n         */\n        init: function () {\n\n            //console.log(this)\n            this.$splashScreen = $('#splash-screen');\n            var $splashWrapper = $('.splash-screen-wrapper');\n            var $splashDesc = $('.desc', this.$splashScreen);\n            var $splashDiagram = $('.diagram', this.$splashScreen);\n            var isHomePage = helpers._url('index', 'Main', 'taoCe') === window.location.href;\n\n            //Url to redirect after closing\n            this.redirectUrl = '';\n\n            //overwrites main styles\n            $splashWrapper.css('display', 'block');\n\n            if (!isHomePage) {\n                $('.modal-footer', this.$splashScreen).hide();\n            }\n            else {\n                $('.modal-footer', this.$splashScreen).show();\n            }\n\n            /**\n             * Place lock icon for disabled modules\n             */\n            $('[data-module-name]', $splashDiagram).each(function () {\n                var $this = $(this);\n\n                if ($this.hasClass('disabled')) {\n\n\n                    $this.find('span').remove();\n                    $this.prepend('<span class=\"icon-lock\"></span>');\n                }\n            });\n\n            /**\n             * Initialize custom scrollbar for the description\n             */\n            $splashDesc.customScrollbar({\n                updateOnWindowResize: true,\n                skin: 'gray-skin',\n                hScroll: false\n            });\n\n            /**\n             * Open modal window immediately\n             */\n            this.$splashScreen.modal({disableClosing: isHomePage});\n\n            this.initNav();\n            this.initModulesNav();\n            this.initCloseButton();\n            //this.adaptHeight();\n        },\n\n        /**\n         * Initialize a listener for the navigation tab buttons\n         */\n        initNav: function () {\n            $('.modal-nav a', this.$splashScreen).on('click', function () {\n                var selectedEl = $(this),\n                    selectedPanelId = selectedEl.data('panel');\n\n                $('.modal-nav li').removeClass('active');\n                $(\"a[data-panel='\" + selectedPanelId + \"']\").parent().addClass('active');\n\n                $('.panels').hide();\n                $(\"div[data-panel-id='\" + selectedPanelId + \"']\").show();\n            });\n        },\n\n        /**\n         * Initialize a listener for the modules buttons\n         */\n        initModulesNav: function () {\n            var splashObj = this;\n\n            $('[data-module-name]', this.$splashScreen).not('.disabled').on('click', function () {\n                var selectedEl = $(this),\n                    selectedModuleName = selectedEl.data('module-name');\n                splashObj.redirectUrl = selectedEl.data('url');\n\n                $('#splash-close-btn').removeAttr('disabled').find('.module-name').text(selectedEl.text());\n\n                if (!selectedEl.hasClass('new-module')) {\n                    var selectedClass = selectedEl.hasClass('groups') ?\n                        $('.test-takers').find('span').first().attr('class') :\n                        selectedEl.find('span').first().attr('class');\n                    $('.module-desc>span').attr({'class': selectedClass});\n                }\n                else {\n                    $('.module-desc>span').attr({'class': ''});\n                }\n\n                $('[data-module-name]').removeClass('active');\n                $('.module-desc').hide();\n\n                selectedEl.addClass('active');\n                $(\"div[data-module='\" + selectedModuleName + \"']\").show();\n\n                $('.desc').customScrollbar('resize', true);\n            });\n        },\n\n        /**\n         * Initialize a listener for the close button\n         */\n        initCloseButton: function () {\n            var splashObj = this;\n            var $closeButton = $('#splash-close-btn');\n\n            //trigger the close by keypress enter\n            $(document).on('keypress', function (e) {\n                if (e.which === 13) {\n                    $closeButton.trigger('click');\n                }\n            });\n\n            //clean unbind\n            this.$splashScreen.on('closed.modal', function () {\n                $(document).off('keypress');\n            });\n\n            $closeButton.on('click', function (e) {\n                e.preventDefault();\n\n                //if the checkbox is checked, then add and set the additional GET parameter 'nosplash'\n                if ($('#nosplash').prop('checked')) {\n                    splashObj.redirectUrl += '&nosplash=true';\n                }\n\n                splashObj.closeSplash(splashObj.redirectUrl);\n            });\n        },\n\n        /**\n         * Close the splash screen and redirect to selected module\n         * @param {string} url\n         */\n        closeSplash: function (url) {\n            window.location = url;\n        },\n\n        /**\n         * limit height of splash to make sure all buttons can be accessed on smaller screens\n         */\n        adaptHeight: function() {\n            //console.log(this)\n            var splashObj = this,\n                $splashContentWrap = splashObj.find('.splash-content-wrap'),\n                // 40 to have some nice margin below\n                maxHeight = $(window).height() - splashObj.find('.modal-title').offset().top - 40;\n            $splashContentWrap.css({ maxHeight: maxHeight });\n        }\n\n    };\n\n    return SplashScreen;\n});\n\n","/**  \n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n * \n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n * \n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n * \n * Copyright (c) 2014 (original work) Open Assessment Technologies SA;\n *               \n * \n */\ndefine('taoCe/controller/home',['jquery', 'helpers', 'taoCe/controller/home/splash'], function($, helpers, splash){\n    'use strict';\n\n    var $mainContainer = $('body');\n\n    /**\n    * The homeController set up the splash screen.\n    * \n    * @exports taoCe/controller/home\n    */\n    var homeController = {\n        \n        /**\n         * Setup the splash screen: loads it's content and initialize the component.\n         */\n        start : function(){\n          \n          //the splash content is loaded only once.\n          if($('#splash-screen', $mainContainer).length === 0){\n             $.get(helpers._url('splash', 'Home', 'taoCe')).success(function(response){\n                 var $splash = $(response);\n                 $splash.css('display', 'none');\n                 $mainContainer.append($splash);\n                 \n                 \n                 splash.init();\n             });\n         } else {\n              splash.init();\n         }\n        }\n    };\n    \n    return homeController;\n});\n\n"]}